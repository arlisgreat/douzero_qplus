2025-04-16 15:53:52 DEBUG: 日志初始化成功
2025-04-16 15:53:52 DEBUG: 找到 275 个 ckpt 文件
2025-04-16 15:53:52 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 15:53:52 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord_weight.ckpt --landlord_up baselines/sl/landlord_up_weight.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 15:57:34 DEBUG: 日志初始化成功
2025-04-16 15:57:34 DEBUG: 找到 275 个 ckpt 文件
2025-04-16 15:57:34 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 15:57:34 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 15:58:43 DEBUG: 日志初始化成功
2025-04-16 15:58:43 DEBUG: 找到 275 个 ckpt 文件
2025-04-16 15:58:43 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 15:58:43 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 16:00:57 DEBUG: 完成 landlord_down_weights_0.ckpt，返回码：0
2025-04-16 16:00:57 DEBUG: stdout: WP results:
landlord : Farmers - 0.6324 : 0.3676
ADP results:
landlord : Farmers - 0.8298 : -0.8298

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.41
Average counter big cards per game: 5.93
Average successful coordination per game: 11.42
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.37
Coordination level: 8.92
2025-04-16 16:00:57 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:01:02 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_7846400.ckpt
2025-04-16 16:01:02 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_7846400.ckpt
2025-04-16 16:03:07 DEBUG: 完成 landlord_down_weights_7846400.ckpt，返回码：0
2025-04-16 16:03:07 DEBUG: stdout: WP results:
landlord : Farmers - 0.5552 : 0.4448
ADP results:
landlord : Farmers - 0.4776 : -0.4776

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.49
Average counter big cards per game: 5.50
Average successful coordination per game: 11.07
Average bomb/rocket plays per game: 0.05

Farmer win probability: 0.44
Coordination level: 8.68
2025-04-16 16:03:07 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:03:12 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_15686400.ckpt
2025-04-16 16:03:12 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_15686400.ckpt
2025-04-16 16:05:01 DEBUG: 完成 landlord_down_weights_15686400.ckpt，返回码：0
2025-04-16 16:05:01 DEBUG: stdout: WP results:
landlord : Farmers - 0.5495 : 0.4505
ADP results:
landlord : Farmers - 0.4422 : -0.4422

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.43
Average counter big cards per game: 5.48
Average successful coordination per game: 11.16
Average bomb/rocket plays per game: 0.05

Farmer win probability: 0.45
Coordination level: 8.69
2025-04-16 16:05:01 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:05:06 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_23539200.ckpt
2025-04-16 16:05:06 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_23539200.ckpt
2025-04-16 16:06:53 DEBUG: 完成 landlord_down_weights_23539200.ckpt，返回码：0
2025-04-16 16:06:53 DEBUG: stdout: WP results:
landlord : Farmers - 0.5398 : 0.4602
ADP results:
landlord : Farmers - 0.3796 : -0.3796

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.38
Average counter big cards per game: 5.49
Average successful coordination per game: 11.05
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.46
Coordination level: 8.64
2025-04-16 16:06:53 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:06:58 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_31376000.ckpt
2025-04-16 16:06:58 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_31376000.ckpt
2025-04-16 16:08:43 DEBUG: 完成 landlord_down_weights_31376000.ckpt，返回码：0
2025-04-16 16:08:43 DEBUG: stdout: WP results:
landlord : Farmers - 0.5396 : 0.4604
ADP results:
landlord : Farmers - 0.363 : -0.363

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.30
Average counter big cards per game: 5.49
Average successful coordination per game: 11.08
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.46
Coordination level: 8.62
2025-04-16 16:08:43 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:08:48 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_39212800.ckpt
2025-04-16 16:08:48 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_39212800.ckpt
2025-04-16 16:10:34 DEBUG: 完成 landlord_down_weights_39212800.ckpt，返回码：0
2025-04-16 16:10:34 DEBUG: stdout: WP results:
landlord : Farmers - 0.5324 : 0.4676
ADP results:
landlord : Farmers - 0.3266 : -0.3266

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.31
Average counter big cards per game: 5.50
Average successful coordination per game: 11.04
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.47
Coordination level: 8.62
2025-04-16 16:10:34 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:10:39 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_47049600.ckpt
2025-04-16 16:10:39 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_47049600.ckpt
2025-04-16 16:12:23 DEBUG: 完成 landlord_down_weights_47049600.ckpt，返回码：0
2025-04-16 16:12:23 DEBUG: stdout: WP results:
landlord : Farmers - 0.5302 : 0.4698
ADP results:
landlord : Farmers - 0.2974 : -0.2974

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.19
Average counter big cards per game: 5.48
Average successful coordination per game: 10.96
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.47
Coordination level: 8.54
2025-04-16 16:12:23 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:12:28 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_54889600.ckpt
2025-04-16 16:12:28 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_54889600.ckpt
2025-04-16 16:14:14 DEBUG: 完成 landlord_down_weights_54889600.ckpt，返回码：0
2025-04-16 16:14:14 DEBUG: stdout: WP results:
landlord : Farmers - 0.5228 : 0.4772
ADP results:
landlord : Farmers - 0.2672 : -0.2672

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.19
Average counter big cards per game: 5.48
Average successful coordination per game: 10.97
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.48
Coordination level: 8.55
2025-04-16 16:14:14 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:14:19 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_62726400.ckpt
2025-04-16 16:14:19 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_62726400.ckpt
2025-04-16 16:16:03 DEBUG: 完成 landlord_down_weights_62726400.ckpt，返回码：0
2025-04-16 16:16:03 DEBUG: stdout: WP results:
landlord : Farmers - 0.519 : 0.481
ADP results:
landlord : Farmers - 0.2676 : -0.2676

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.16
Average counter big cards per game: 5.43
Average successful coordination per game: 10.85
Average bomb/rocket plays per game: 0.05

Farmer win probability: 0.48
Coordination level: 8.48
2025-04-16 16:16:03 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:16:08 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_70563200.ckpt
2025-04-16 16:16:08 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_70563200.ckpt
2025-04-16 16:17:53 DEBUG: 完成 landlord_down_weights_70563200.ckpt，返回码：0
2025-04-16 16:17:53 DEBUG: stdout: WP results:
landlord : Farmers - 0.519 : 0.481
ADP results:
landlord : Farmers - 0.2212 : -0.2212

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.13
Average counter big cards per game: 5.43
Average successful coordination per game: 10.88
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.48
Coordination level: 8.48
2025-04-16 16:17:53 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:17:58 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_78396800.ckpt
2025-04-16 16:17:58 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_78396800.ckpt
2025-04-16 16:19:44 DEBUG: 完成 landlord_down_weights_78396800.ckpt，返回码：0
2025-04-16 16:19:44 DEBUG: stdout: WP results:
landlord : Farmers - 0.513 : 0.487
ADP results:
landlord : Farmers - 0.2208 : -0.2208

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.17
Average counter big cards per game: 5.46
Average successful coordination per game: 10.96
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.49
Coordination level: 8.53
2025-04-16 16:19:44 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:19:49 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_86230400.ckpt
2025-04-16 16:19:49 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_86230400.ckpt
2025-04-16 16:21:35 DEBUG: 完成 landlord_down_weights_86230400.ckpt，返回码：0
2025-04-16 16:21:35 DEBUG: stdout: WP results:
landlord : Farmers - 0.5083 : 0.4917
ADP results:
landlord : Farmers - 0.1634 : -0.1634

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.16
Average counter big cards per game: 5.42
Average successful coordination per game: 10.82
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.49
Coordination level: 8.46
2025-04-16 16:21:35 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:21:40 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_94080000.ckpt
2025-04-16 16:21:40 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_94080000.ckpt
2025-04-16 16:23:25 DEBUG: 完成 landlord_down_weights_94080000.ckpt，返回码：0
2025-04-16 16:23:25 DEBUG: stdout: WP results:
landlord : Farmers - 0.5124 : 0.4876
ADP results:
landlord : Farmers - 0.2092 : -0.2092

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.08
Average counter big cards per game: 5.41
Average successful coordination per game: 10.74
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.49
Coordination level: 8.41
2025-04-16 16:23:25 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:23:30 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_101907200.ckpt
2025-04-16 16:23:30 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_101907200.ckpt
2025-04-16 16:25:16 DEBUG: 完成 landlord_down_weights_101907200.ckpt，返回码：0
2025-04-16 16:25:16 DEBUG: stdout: WP results:
landlord : Farmers - 0.4961 : 0.5039
ADP results:
landlord : Farmers - 0.1276 : -0.1276

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.12
Average counter big cards per game: 5.39
Average successful coordination per game: 10.77
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.50
Coordination level: 8.43
2025-04-16 16:25:16 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:25:21 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_109750400.ckpt
2025-04-16 16:25:21 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_109750400.ckpt
2025-04-16 16:27:08 DEBUG: 完成 landlord_down_weights_109750400.ckpt，返回码：0
2025-04-16 16:27:08 DEBUG: stdout: WP results:
landlord : Farmers - 0.4941 : 0.5059
ADP results:
landlord : Farmers - 0.0788 : -0.0788

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.01
Average counter big cards per game: 5.39
Average successful coordination per game: 10.62
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.51
Coordination level: 8.34
2025-04-16 16:27:08 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:27:13 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_117587200.ckpt
2025-04-16 16:27:13 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_117587200.ckpt
2025-04-16 16:28:59 DEBUG: 完成 landlord_down_weights_117587200.ckpt，返回码：0
2025-04-16 16:28:59 DEBUG: stdout: WP results:
landlord : Farmers - 0.4995 : 0.5005
ADP results:
landlord : Farmers - 0.1066 : -0.1066

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.11
Average counter big cards per game: 5.35
Average successful coordination per game: 10.67
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.50
Coordination level: 8.37
2025-04-16 16:28:59 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:29:04 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_125427200.ckpt
2025-04-16 16:29:04 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_125427200.ckpt
2025-04-16 16:30:51 DEBUG: 完成 landlord_down_weights_125427200.ckpt，返回码：0
2025-04-16 16:30:51 DEBUG: stdout: WP results:
landlord : Farmers - 0.4992 : 0.5008
ADP results:
landlord : Farmers - 0.1 : -0.1

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.07
Average counter big cards per game: 5.40
Average successful coordination per game: 10.63
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.50
Coordination level: 8.36
2025-04-16 16:30:51 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:30:56 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_133264000.ckpt
2025-04-16 16:30:56 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_133264000.ckpt
2025-04-16 16:32:42 DEBUG: 完成 landlord_down_weights_133264000.ckpt，返回码：0
2025-04-16 16:32:42 DEBUG: stdout: WP results:
landlord : Farmers - 0.4976 : 0.5024
ADP results:
landlord : Farmers - 0.1122 : -0.1122

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.98
Average counter big cards per game: 5.38
Average successful coordination per game: 10.57
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.50
Coordination level: 8.31
2025-04-16 16:32:42 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:32:47 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_141097600.ckpt
2025-04-16 16:32:47 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_141097600.ckpt
2025-04-16 16:33:57 DEBUG: 日志初始化成功
2025-04-16 16:33:57 DEBUG: 找到 276 个 ckpt 文件
2025-04-16 16:33:57 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 16:33:57 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 16:35:48 DEBUG: 完成 landlord_down_weights_0.ckpt，返回码：0
2025-04-16 16:35:48 DEBUG: stdout: WP results:
landlord : Farmers - 0.6324 : 0.3676
ADP results:
landlord : Farmers - 0.8298 : -0.8298

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.41
Average counter big cards per game: 5.93
Average successful coordination per game: 11.42
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.37
Coordination level: 8.92
2025-04-16 16:35:48 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:35:53 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_7846400.ckpt
2025-04-16 16:35:53 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_7846400.ckpt
2025-04-16 16:37:38 DEBUG: 完成 landlord_down_weights_7846400.ckpt，返回码：0
2025-04-16 16:37:38 DEBUG: stdout: WP results:
landlord : Farmers - 0.5552 : 0.4448
ADP results:
landlord : Farmers - 0.4776 : -0.4776

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.49
Average counter big cards per game: 5.50
Average successful coordination per game: 11.07
Average bomb/rocket plays per game: 0.05

Farmer win probability: 0.44
Coordination level: 8.68
2025-04-16 16:37:38 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:37:43 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_15686400.ckpt
2025-04-16 16:37:43 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_15686400.ckpt
2025-04-16 16:54:23 DEBUG: 日志初始化成功
2025-04-16 16:54:23 DEBUG: 找到 277 个 ckpt 文件
2025-04-16 16:54:23 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 16:54:23 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 16:54:36 DEBUG: 日志初始化成功
2025-04-16 16:54:36 DEBUG: 找到 277 个 ckpt 文件
2025-04-16 16:54:36 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 16:54:36 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 17:01:11 DEBUG: 日志初始化成功
2025-04-16 17:01:11 DEBUG: 找到 277 个 ckpt 文件
2025-04-16 17:01:11 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 17:01:11 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 17:06:19 DEBUG: 日志初始化成功
2025-04-16 17:06:19 DEBUG: 找到 277 个 ckpt 文件
2025-04-16 17:06:19 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 17:06:19 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 17:08:10 DEBUG: 完成 landlord_down_weights_0.ckpt，返回码：0
2025-04-16 17:08:10 DEBUG: stdout: WP results:
landlord : Farmers - 0.6324 : 0.3676
ADP results:
landlord : Farmers - 0.8298 : -0.8298

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.41
Average counter big cards per game: 5.93
Average successful coordination per game: 11.42
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.37
Coordination level: 8.92
2025-04-16 17:08:10 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:08:10 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:08:15 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_7846400.ckpt
2025-04-16 17:08:15 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_7846400.ckpt
2025-04-16 17:10:00 DEBUG: 完成 landlord_down_weights_7846400.ckpt，返回码：0
2025-04-16 17:10:00 DEBUG: stdout: WP results:
landlord : Farmers - 0.5552 : 0.4448
ADP results:
landlord : Farmers - 0.4776 : -0.4776

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.49
Average counter big cards per game: 5.50
Average successful coordination per game: 11.07
Average bomb/rocket plays per game: 0.05

Farmer win probability: 0.44
Coordination level: 8.68
2025-04-16 17:10:00 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:10:00 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:10:05 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_15686400.ckpt
2025-04-16 17:10:05 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_15686400.ckpt
2025-04-16 17:12:20 DEBUG: 完成 landlord_down_weights_15686400.ckpt，返回码：0
2025-04-16 17:12:20 DEBUG: stdout: WP results:
landlord : Farmers - 0.5495 : 0.4505
ADP results:
landlord : Farmers - 0.4422 : -0.4422

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.43
Average counter big cards per game: 5.48
Average successful coordination per game: 11.16
Average bomb/rocket plays per game: 0.05

Farmer win probability: 0.45
Coordination level: 8.69
2025-04-16 17:12:20 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:12:20 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:12:25 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_23539200.ckpt
2025-04-16 17:12:25 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_23539200.ckpt
2025-04-16 17:14:11 DEBUG: 完成 landlord_down_weights_23539200.ckpt，返回码：0
2025-04-16 17:14:11 DEBUG: stdout: WP results:
landlord : Farmers - 0.5398 : 0.4602
ADP results:
landlord : Farmers - 0.3796 : -0.3796

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.38
Average counter big cards per game: 5.49
Average successful coordination per game: 11.05
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.46
Coordination level: 8.64
2025-04-16 17:14:11 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:14:11 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:14:16 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_31376000.ckpt
2025-04-16 17:14:16 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_31376000.ckpt
2025-04-16 17:16:43 DEBUG: 完成 landlord_down_weights_31376000.ckpt，返回码：0
2025-04-16 17:16:43 DEBUG: stdout: WP results:
landlord : Farmers - 0.5396 : 0.4604
ADP results:
landlord : Farmers - 0.363 : -0.363

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.30
Average counter big cards per game: 5.49
Average successful coordination per game: 11.08
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.46
Coordination level: 8.62
2025-04-16 17:16:43 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:16:43 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:16:48 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_39212800.ckpt
2025-04-16 17:16:48 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_39212800.ckpt
2025-04-16 17:18:35 DEBUG: 完成 landlord_down_weights_39212800.ckpt，返回码：0
2025-04-16 17:18:35 DEBUG: stdout: WP results:
landlord : Farmers - 0.5324 : 0.4676
ADP results:
landlord : Farmers - 0.3266 : -0.3266

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.31
Average counter big cards per game: 5.50
Average successful coordination per game: 11.04
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.47
Coordination level: 8.62
2025-04-16 17:18:35 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:18:35 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:18:40 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_47049600.ckpt
2025-04-16 17:18:40 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_47049600.ckpt
2025-04-16 17:20:26 DEBUG: 完成 landlord_down_weights_47049600.ckpt，返回码：0
2025-04-16 17:20:26 DEBUG: stdout: WP results:
landlord : Farmers - 0.5302 : 0.4698
ADP results:
landlord : Farmers - 0.2974 : -0.2974

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.19
Average counter big cards per game: 5.48
Average successful coordination per game: 10.96
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.47
Coordination level: 8.54
2025-04-16 17:20:26 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:20:26 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:20:31 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_54889600.ckpt
2025-04-16 17:20:31 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_54889600.ckpt
2025-04-16 17:22:15 DEBUG: 完成 landlord_down_weights_54889600.ckpt，返回码：0
2025-04-16 17:22:15 DEBUG: stdout: WP results:
landlord : Farmers - 0.5228 : 0.4772
ADP results:
landlord : Farmers - 0.2672 : -0.2672

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.19
Average counter big cards per game: 5.48
Average successful coordination per game: 10.97
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.48
Coordination level: 8.55
2025-04-16 17:22:15 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:22:15 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:22:20 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_62726400.ckpt
2025-04-16 17:22:20 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_62726400.ckpt
2025-04-16 17:24:05 DEBUG: 完成 landlord_down_weights_62726400.ckpt，返回码：0
2025-04-16 17:24:05 DEBUG: stdout: WP results:
landlord : Farmers - 0.519 : 0.481
ADP results:
landlord : Farmers - 0.2676 : -0.2676

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.16
Average counter big cards per game: 5.43
Average successful coordination per game: 10.85
Average bomb/rocket plays per game: 0.05

Farmer win probability: 0.48
Coordination level: 8.48
2025-04-16 17:24:05 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:24:05 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:24:10 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_70563200.ckpt
2025-04-16 17:24:10 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_70563200.ckpt
2025-04-16 17:25:55 DEBUG: 完成 landlord_down_weights_70563200.ckpt，返回码：0
2025-04-16 17:25:55 DEBUG: stdout: WP results:
landlord : Farmers - 0.519 : 0.481
ADP results:
landlord : Farmers - 0.2212 : -0.2212

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.13
Average counter big cards per game: 5.43
Average successful coordination per game: 10.88
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.48
Coordination level: 8.48
2025-04-16 17:25:55 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:25:55 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:26:00 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_78396800.ckpt
2025-04-16 17:26:00 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_78396800.ckpt
2025-04-16 17:27:47 DEBUG: 完成 landlord_down_weights_78396800.ckpt，返回码：0
2025-04-16 17:27:47 DEBUG: stdout: WP results:
landlord : Farmers - 0.513 : 0.487
ADP results:
landlord : Farmers - 0.2208 : -0.2208

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.17
Average counter big cards per game: 5.46
Average successful coordination per game: 10.96
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.49
Coordination level: 8.53
2025-04-16 17:27:47 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:27:47 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:27:52 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_86230400.ckpt
2025-04-16 17:27:52 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_86230400.ckpt
2025-04-16 17:29:38 DEBUG: 完成 landlord_down_weights_86230400.ckpt，返回码：0
2025-04-16 17:29:38 DEBUG: stdout: WP results:
landlord : Farmers - 0.5083 : 0.4917
ADP results:
landlord : Farmers - 0.1634 : -0.1634

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.16
Average counter big cards per game: 5.42
Average successful coordination per game: 10.82
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.49
Coordination level: 8.46
2025-04-16 17:29:38 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:29:38 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:29:43 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_94080000.ckpt
2025-04-16 17:29:43 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_94080000.ckpt
2025-04-16 17:31:28 DEBUG: 完成 landlord_down_weights_94080000.ckpt，返回码：0
2025-04-16 17:31:28 DEBUG: stdout: WP results:
landlord : Farmers - 0.5124 : 0.4876
ADP results:
landlord : Farmers - 0.2092 : -0.2092

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.08
Average counter big cards per game: 5.41
Average successful coordination per game: 10.74
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.49
Coordination level: 8.41
2025-04-16 17:31:28 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:31:28 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:31:33 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_101907200.ckpt
2025-04-16 17:31:33 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_101907200.ckpt
2025-04-16 17:33:18 DEBUG: 完成 landlord_down_weights_101907200.ckpt，返回码：0
2025-04-16 17:33:18 DEBUG: stdout: WP results:
landlord : Farmers - 0.4961 : 0.5039
ADP results:
landlord : Farmers - 0.1276 : -0.1276

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.12
Average counter big cards per game: 5.39
Average successful coordination per game: 10.77
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.50
Coordination level: 8.43
2025-04-16 17:33:18 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:33:18 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:33:23 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_109750400.ckpt
2025-04-16 17:33:23 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_109750400.ckpt
2025-04-16 17:35:08 DEBUG: 完成 landlord_down_weights_109750400.ckpt，返回码：0
2025-04-16 17:35:08 DEBUG: stdout: WP results:
landlord : Farmers - 0.4941 : 0.5059
ADP results:
landlord : Farmers - 0.0788 : -0.0788

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.01
Average counter big cards per game: 5.39
Average successful coordination per game: 10.62
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.51
Coordination level: 8.34
2025-04-16 17:35:08 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:35:08 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:35:13 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_117587200.ckpt
2025-04-16 17:35:13 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_117587200.ckpt
2025-04-16 17:36:58 DEBUG: 完成 landlord_down_weights_117587200.ckpt，返回码：0
2025-04-16 17:36:58 DEBUG: stdout: WP results:
landlord : Farmers - 0.4995 : 0.5005
ADP results:
landlord : Farmers - 0.1066 : -0.1066

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.11
Average counter big cards per game: 5.35
Average successful coordination per game: 10.67
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.50
Coordination level: 8.37
2025-04-16 17:36:58 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:36:58 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:37:03 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_125427200.ckpt
2025-04-16 17:37:03 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_125427200.ckpt
2025-04-16 17:38:45 DEBUG: 完成 landlord_down_weights_125427200.ckpt，返回码：0
2025-04-16 17:38:45 DEBUG: stdout: WP results:
landlord : Farmers - 0.4992 : 0.5008
ADP results:
landlord : Farmers - 0.1 : -0.1

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.07
Average counter big cards per game: 5.40
Average successful coordination per game: 10.63
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.50
Coordination level: 8.36
2025-04-16 17:38:45 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:38:45 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:38:50 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_133264000.ckpt
2025-04-16 17:38:50 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_133264000.ckpt
2025-04-16 17:40:32 DEBUG: 完成 landlord_down_weights_133264000.ckpt，返回码：0
2025-04-16 17:40:32 DEBUG: stdout: WP results:
landlord : Farmers - 0.4976 : 0.5024
ADP results:
landlord : Farmers - 0.1122 : -0.1122

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.98
Average counter big cards per game: 5.38
Average successful coordination per game: 10.57
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.50
Coordination level: 8.31
2025-04-16 17:40:32 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:40:32 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:40:37 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_141097600.ckpt
2025-04-16 17:40:37 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_141097600.ckpt
2025-04-16 17:42:17 DEBUG: 完成 landlord_down_weights_141097600.ckpt，返回码：0
2025-04-16 17:42:17 DEBUG: stdout: WP results:
landlord : Farmers - 0.488 : 0.512
ADP results:
landlord : Farmers - 0.0434 : -0.0434

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.98
Average counter big cards per game: 5.36
Average successful coordination per game: 10.53
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.51
Coordination level: 8.29
2025-04-16 17:42:17 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:42:17 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:42:22 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_148937600.ckpt
2025-04-16 17:42:22 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_148937600.ckpt
2025-04-16 17:44:05 DEBUG: 完成 landlord_down_weights_148937600.ckpt，返回码：0
2025-04-16 17:44:05 DEBUG: stdout: WP results:
landlord : Farmers - 0.4883 : 0.5117
ADP results:
landlord : Farmers - 0.066 : -0.066

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.05
Average counter big cards per game: 5.38
Average successful coordination per game: 10.65
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.51
Coordination level: 8.36
2025-04-16 17:44:05 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:44:05 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:44:10 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_156771200.ckpt
2025-04-16 17:44:10 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_156771200.ckpt
2025-04-16 17:45:52 DEBUG: 完成 landlord_down_weights_156771200.ckpt，返回码：0
2025-04-16 17:45:52 DEBUG: stdout: WP results:
landlord : Farmers - 0.4899 : 0.5101
ADP results:
landlord : Farmers - 0.0716 : -0.0716

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.04
Average counter big cards per game: 5.37
Average successful coordination per game: 10.60
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.51
Coordination level: 8.34
2025-04-16 17:45:52 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:45:52 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:45:57 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_164614400.ckpt
2025-04-16 17:45:57 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_164614400.ckpt
2025-04-16 17:47:39 DEBUG: 完成 landlord_down_weights_164614400.ckpt，返回码：0
2025-04-16 17:47:39 DEBUG: stdout: WP results:
landlord : Farmers - 0.4837 : 0.5163
ADP results:
landlord : Farmers - 0.0468 : -0.0468

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.03
Average counter big cards per game: 5.34
Average successful coordination per game: 10.51
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.52
Coordination level: 8.29
2025-04-16 17:47:39 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:47:39 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:47:44 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_172448000.ckpt
2025-04-16 17:47:44 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_172448000.ckpt
2025-04-16 17:49:27 DEBUG: 完成 landlord_down_weights_172448000.ckpt，返回码：0
2025-04-16 17:49:27 DEBUG: stdout: WP results:
landlord : Farmers - 0.4831 : 0.5169
ADP results:
landlord : Farmers - 0.0252 : -0.0252

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.02
Average counter big cards per game: 5.38
Average successful coordination per game: 10.59
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.52
Coordination level: 8.33
2025-04-16 17:49:27 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:49:28 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:49:33 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_180288000.ckpt
2025-04-16 17:49:33 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_180288000.ckpt
2025-04-16 17:51:16 DEBUG: 完成 landlord_down_weights_180288000.ckpt，返回码：0
2025-04-16 17:51:16 DEBUG: stdout: WP results:
landlord : Farmers - 0.4944 : 0.5056
ADP results:
landlord : Farmers - 0.0854 : -0.0854

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.13
Average counter big cards per game: 5.43
Average successful coordination per game: 10.69
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.51
Coordination level: 8.41
2025-04-16 17:51:16 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:51:16 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:51:21 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_188124800.ckpt
2025-04-16 17:51:21 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_188124800.ckpt
2025-04-16 17:53:05 DEBUG: 完成 landlord_down_weights_188124800.ckpt，返回码：0
2025-04-16 17:53:05 DEBUG: stdout: WP results:
landlord : Farmers - 0.4798 : 0.5202
ADP results:
landlord : Farmers - 0.0054 : -0.0054

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.02
Average counter big cards per game: 5.34
Average successful coordination per game: 10.59
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.52
Coordination level: 8.32
2025-04-16 17:53:05 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:53:05 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:53:10 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_195961600.ckpt
2025-04-16 17:53:10 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_195961600.ckpt
2025-04-16 17:54:52 DEBUG: 完成 landlord_down_weights_195961600.ckpt，返回码：0
2025-04-16 17:54:52 DEBUG: stdout: WP results:
landlord : Farmers - 0.4748 : 0.5252
ADP results:
landlord : Farmers - -0.0278 : 0.0278

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.87
Average counter big cards per game: 5.36
Average successful coordination per game: 10.42
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.53
Coordination level: 8.22
2025-04-16 17:54:52 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:54:52 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:54:57 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_203798400.ckpt
2025-04-16 17:54:57 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_203798400.ckpt
2025-04-16 17:56:38 DEBUG: 完成 landlord_down_weights_203798400.ckpt，返回码：0
2025-04-16 17:56:38 DEBUG: stdout: WP results:
landlord : Farmers - 0.4691 : 0.5309
ADP results:
landlord : Farmers - -0.0484 : 0.0484

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.91
Average counter big cards per game: 5.37
Average successful coordination per game: 10.47
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.53
Coordination level: 8.25
2025-04-16 17:56:38 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:56:38 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:56:43 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_211635200.ckpt
2025-04-16 17:56:43 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_211635200.ckpt
2025-04-16 17:58:30 DEBUG: 完成 landlord_down_weights_211635200.ckpt，返回码：0
2025-04-16 17:58:30 DEBUG: stdout: WP results:
landlord : Farmers - 0.4819 : 0.5181
ADP results:
landlord : Farmers - 0.0146 : -0.0146

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.04
Average counter big cards per game: 5.40
Average successful coordination per game: 10.53
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.52
Coordination level: 8.32
2025-04-16 17:58:30 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:58:30 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 17:58:35 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_219478400.ckpt
2025-04-16 17:58:35 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_219478400.ckpt
2025-04-16 18:00:18 DEBUG: 完成 landlord_down_weights_219478400.ckpt，返回码：0
2025-04-16 18:00:18 DEBUG: stdout: WP results:
landlord : Farmers - 0.4756 : 0.5244
ADP results:
landlord : Farmers - -0.028 : 0.028

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.07
Average counter big cards per game: 5.40
Average successful coordination per game: 10.55
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.52
Coordination level: 8.34
2025-04-16 18:00:18 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:00:18 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:00:23 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_227321600.ckpt
2025-04-16 18:00:23 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_227321600.ckpt
2025-04-16 18:02:07 DEBUG: 完成 landlord_down_weights_227321600.ckpt，返回码：0
2025-04-16 18:02:07 DEBUG: stdout: WP results:
landlord : Farmers - 0.4692 : 0.5308
ADP results:
landlord : Farmers - -0.0472 : 0.0472

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.02
Average counter big cards per game: 5.39
Average successful coordination per game: 10.50
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.53
Coordination level: 8.30
2025-04-16 18:02:07 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:02:07 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:02:12 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_235158400.ckpt
2025-04-16 18:02:12 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_235158400.ckpt
2025-04-16 18:03:56 DEBUG: 完成 landlord_down_weights_235158400.ckpt，返回码：0
2025-04-16 18:03:56 DEBUG: stdout: WP results:
landlord : Farmers - 0.466 : 0.534
ADP results:
landlord : Farmers - -0.0528 : 0.0528

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.98
Average counter big cards per game: 5.42
Average successful coordination per game: 10.54
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.53
Coordination level: 8.31
2025-04-16 18:03:56 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:03:56 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:04:01 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_243004800.ckpt
2025-04-16 18:04:01 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_243004800.ckpt
2025-04-16 18:05:45 DEBUG: 完成 landlord_down_weights_243004800.ckpt，返回码：0
2025-04-16 18:05:45 DEBUG: stdout: WP results:
landlord : Farmers - 0.4654 : 0.5346
ADP results:
landlord : Farmers - -0.0884 : 0.0884

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.00
Average counter big cards per game: 5.40
Average successful coordination per game: 10.56
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.53
Coordination level: 8.32
2025-04-16 18:05:45 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:05:45 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:05:50 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_250848000.ckpt
2025-04-16 18:05:50 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_250848000.ckpt
2025-04-16 18:07:34 DEBUG: 完成 landlord_down_weights_250848000.ckpt，返回码：0
2025-04-16 18:07:34 DEBUG: stdout: WP results:
landlord : Farmers - 0.4671 : 0.5329
ADP results:
landlord : Farmers - -0.0698 : 0.0698

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.03
Average counter big cards per game: 5.42
Average successful coordination per game: 10.57
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.53
Coordination level: 8.34
2025-04-16 18:07:34 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:07:34 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:07:39 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_258684800.ckpt
2025-04-16 18:07:39 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_258684800.ckpt
2025-04-16 18:09:23 DEBUG: 完成 landlord_down_weights_258684800.ckpt，返回码：0
2025-04-16 18:09:23 DEBUG: stdout: WP results:
landlord : Farmers - 0.4638 : 0.5362
ADP results:
landlord : Farmers - -0.094 : 0.094

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.96
Average counter big cards per game: 5.40
Average successful coordination per game: 10.53
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.54
Coordination level: 8.30
2025-04-16 18:09:23 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:09:23 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:09:28 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_266528000.ckpt
2025-04-16 18:09:28 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_266528000.ckpt
2025-04-16 18:11:12 DEBUG: 完成 landlord_down_weights_266528000.ckpt，返回码：0
2025-04-16 18:11:12 DEBUG: stdout: WP results:
landlord : Farmers - 0.4601 : 0.5399
ADP results:
landlord : Farmers - -0.1114 : 0.1114

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.94
Average counter big cards per game: 5.36
Average successful coordination per game: 10.39
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.54
Coordination level: 8.23
2025-04-16 18:11:12 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:11:12 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:11:17 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_274368000.ckpt
2025-04-16 18:11:17 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_274368000.ckpt
2025-04-16 18:13:01 DEBUG: 完成 landlord_down_weights_274368000.ckpt，返回码：0
2025-04-16 18:13:01 DEBUG: stdout: WP results:
landlord : Farmers - 0.4491 : 0.5509
ADP results:
landlord : Farmers - -0.184 : 0.184

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.87
Average counter big cards per game: 5.39
Average successful coordination per game: 10.40
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.55
Coordination level: 8.22
2025-04-16 18:13:01 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:13:01 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:13:06 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_282214400.ckpt
2025-04-16 18:13:06 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_282214400.ckpt
2025-04-16 18:14:50 DEBUG: 完成 landlord_down_weights_282214400.ckpt，返回码：0
2025-04-16 18:14:50 DEBUG: stdout: WP results:
landlord : Farmers - 0.447 : 0.553
ADP results:
landlord : Farmers - -0.1946 : 0.1946

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.87
Average counter big cards per game: 5.38
Average successful coordination per game: 10.38
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.55
Coordination level: 8.21
2025-04-16 18:14:50 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:14:50 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:14:55 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_290054400.ckpt
2025-04-16 18:14:55 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_290054400.ckpt
2025-04-16 18:16:46 DEBUG: 完成 landlord_down_weights_290054400.ckpt，返回码：0
2025-04-16 18:16:46 DEBUG: stdout: WP results:
landlord : Farmers - 0.4481 : 0.5519
ADP results:
landlord : Farmers - -0.1882 : 0.1882

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.83
Average counter big cards per game: 5.39
Average successful coordination per game: 10.43
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.55
Coordination level: 8.22
2025-04-16 18:16:46 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:16:46 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:16:51 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_297907200.ckpt
2025-04-16 18:16:51 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_297907200.ckpt
2025-04-16 18:18:34 DEBUG: 完成 landlord_down_weights_297907200.ckpt，返回码：0
2025-04-16 18:18:34 DEBUG: stdout: WP results:
landlord : Farmers - 0.4499 : 0.5501
ADP results:
landlord : Farmers - -0.1978 : 0.1978

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.89
Average counter big cards per game: 5.36
Average successful coordination per game: 10.37
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.55
Coordination level: 8.21
2025-04-16 18:18:34 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:18:34 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:18:39 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_305760000.ckpt
2025-04-16 18:18:39 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_305760000.ckpt
2025-04-16 18:20:22 DEBUG: 完成 landlord_down_weights_305760000.ckpt，返回码：0
2025-04-16 18:20:22 DEBUG: stdout: WP results:
landlord : Farmers - 0.4494 : 0.5506
ADP results:
landlord : Farmers - -0.1912 : 0.1912

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.88
Average counter big cards per game: 5.35
Average successful coordination per game: 10.36
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.55
Coordination level: 8.20
2025-04-16 18:20:22 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:20:22 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:20:27 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_313609600.ckpt
2025-04-16 18:20:27 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_313609600.ckpt
2025-04-16 18:22:12 DEBUG: 完成 landlord_down_weights_313609600.ckpt，返回码：0
2025-04-16 18:22:12 DEBUG: stdout: WP results:
landlord : Farmers - 0.4483 : 0.5517
ADP results:
landlord : Farmers - -0.1714 : 0.1714

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.88
Average counter big cards per game: 5.39
Average successful coordination per game: 10.37
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.55
Coordination level: 8.21
2025-04-16 18:22:12 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:22:12 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:22:17 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_321465600.ckpt
2025-04-16 18:22:17 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_321465600.ckpt
2025-04-16 18:24:01 DEBUG: 完成 landlord_down_weights_321465600.ckpt，返回码：0
2025-04-16 18:24:01 DEBUG: stdout: WP results:
landlord : Farmers - 0.446 : 0.554
ADP results:
landlord : Farmers - -0.2046 : 0.2046

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.84
Average counter big cards per game: 5.39
Average successful coordination per game: 10.42
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.55
Coordination level: 8.22
2025-04-16 18:24:01 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:24:01 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:24:06 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_329315200.ckpt
2025-04-16 18:24:06 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_329315200.ckpt
2025-04-16 18:25:50 DEBUG: 完成 landlord_down_weights_329315200.ckpt，返回码：0
2025-04-16 18:25:50 DEBUG: stdout: WP results:
landlord : Farmers - 0.4473 : 0.5527
ADP results:
landlord : Farmers - -0.1874 : 0.1874

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.86
Average counter big cards per game: 5.40
Average successful coordination per game: 10.41
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.55
Coordination level: 8.22
2025-04-16 18:25:50 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:25:50 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:25:55 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_337168000.ckpt
2025-04-16 18:25:55 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_337168000.ckpt
2025-04-16 18:27:37 DEBUG: 完成 landlord_down_weights_337168000.ckpt，返回码：0
2025-04-16 18:27:37 DEBUG: stdout: WP results:
landlord : Farmers - 0.4428 : 0.5572
ADP results:
landlord : Farmers - -0.222 : 0.222

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.86
Average counter big cards per game: 5.38
Average successful coordination per game: 10.33
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.56
Coordination level: 8.19
2025-04-16 18:27:37 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:27:37 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:27:42 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_345020800.ckpt
2025-04-16 18:27:42 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_345020800.ckpt
2025-04-16 18:29:24 DEBUG: 完成 landlord_down_weights_345020800.ckpt，返回码：0
2025-04-16 18:29:24 DEBUG: stdout: WP results:
landlord : Farmers - 0.4438 : 0.5562
ADP results:
landlord : Farmers - -0.2118 : 0.2118

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.79
Average counter big cards per game: 5.37
Average successful coordination per game: 10.35
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.56
Coordination level: 8.17
2025-04-16 18:29:24 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:29:24 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:29:29 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_352873600.ckpt
2025-04-16 18:29:29 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_352873600.ckpt
2025-04-16 18:31:10 DEBUG: 完成 landlord_down_weights_352873600.ckpt，返回码：0
2025-04-16 18:31:10 DEBUG: stdout: WP results:
landlord : Farmers - 0.4426 : 0.5574
ADP results:
landlord : Farmers - -0.2256 : 0.2256

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.86
Average counter big cards per game: 5.37
Average successful coordination per game: 10.31
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.56
Coordination level: 8.18
2025-04-16 18:31:10 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:31:10 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:31:15 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_360726400.ckpt
2025-04-16 18:31:15 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_360726400.ckpt
2025-04-16 18:32:59 DEBUG: 完成 landlord_down_weights_360726400.ckpt，返回码：0
2025-04-16 18:32:59 DEBUG: stdout: WP results:
landlord : Farmers - 0.4406 : 0.5594
ADP results:
landlord : Farmers - -0.23 : 0.23

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.90
Average counter big cards per game: 5.37
Average successful coordination per game: 10.45
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.56
Coordination level: 8.24
2025-04-16 18:32:59 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:32:59 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:33:04 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_368579200.ckpt
2025-04-16 18:33:04 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_368579200.ckpt
2025-04-16 18:34:48 DEBUG: 完成 landlord_down_weights_368579200.ckpt，返回码：0
2025-04-16 18:34:48 DEBUG: stdout: WP results:
landlord : Farmers - 0.4406 : 0.5594
ADP results:
landlord : Farmers - -0.2366 : 0.2366

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.89
Average counter big cards per game: 5.43
Average successful coordination per game: 10.36
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.56
Coordination level: 8.23
2025-04-16 18:34:48 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:34:48 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:34:53 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_376432000.ckpt
2025-04-16 18:34:53 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_376432000.ckpt
2025-04-16 18:36:37 DEBUG: 完成 landlord_down_weights_376432000.ckpt，返回码：0
2025-04-16 18:36:37 DEBUG: stdout: WP results:
landlord : Farmers - 0.4409 : 0.5591
ADP results:
landlord : Farmers - -0.2404 : 0.2404

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.86
Average counter big cards per game: 5.38
Average successful coordination per game: 10.44
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.56
Coordination level: 8.23
2025-04-16 18:36:37 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:36:37 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:36:42 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_384281600.ckpt
2025-04-16 18:36:42 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_384281600.ckpt
2025-04-16 18:38:27 DEBUG: 完成 landlord_down_weights_384281600.ckpt，返回码：0
2025-04-16 18:38:27 DEBUG: stdout: WP results:
landlord : Farmers - 0.4399 : 0.5601
ADP results:
landlord : Farmers - -0.2492 : 0.2492

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.81
Average counter big cards per game: 5.40
Average successful coordination per game: 10.39
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.56
Coordination level: 8.20
2025-04-16 18:38:27 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:38:27 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:38:32 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_392137600.ckpt
2025-04-16 18:38:32 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_392137600.ckpt
2025-04-16 18:40:15 DEBUG: 完成 landlord_down_weights_392137600.ckpt，返回码：0
2025-04-16 18:40:15 DEBUG: stdout: WP results:
landlord : Farmers - 0.4382 : 0.5618
ADP results:
landlord : Farmers - -0.2682 : 0.2682

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.79
Average counter big cards per game: 5.37
Average successful coordination per game: 10.28
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.56
Coordination level: 8.15
2025-04-16 18:40:15 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:40:15 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:40:20 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_399987200.ckpt
2025-04-16 18:40:20 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_399987200.ckpt
2025-04-16 18:42:04 DEBUG: 完成 landlord_down_weights_399987200.ckpt，返回码：0
2025-04-16 18:42:04 DEBUG: stdout: WP results:
landlord : Farmers - 0.4408 : 0.5592
ADP results:
landlord : Farmers - -0.2416 : 0.2416

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.89
Average counter big cards per game: 5.40
Average successful coordination per game: 10.40
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.56
Coordination level: 8.23
2025-04-16 18:42:04 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:42:04 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:42:09 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_407840000.ckpt
2025-04-16 18:42:09 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_407840000.ckpt
2025-04-16 18:43:52 DEBUG: 完成 landlord_down_weights_407840000.ckpt，返回码：0
2025-04-16 18:43:52 DEBUG: stdout: WP results:
landlord : Farmers - 0.4408 : 0.5592
ADP results:
landlord : Farmers - -0.2496 : 0.2496

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.85
Average counter big cards per game: 5.37
Average successful coordination per game: 10.33
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.56
Coordination level: 8.18
2025-04-16 18:43:52 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:43:52 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:43:57 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_415692800.ckpt
2025-04-16 18:43:57 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_415692800.ckpt
2025-04-16 18:45:39 DEBUG: 完成 landlord_down_weights_415692800.ckpt，返回码：0
2025-04-16 18:45:39 DEBUG: stdout: WP results:
landlord : Farmers - 0.4314 : 0.5686
ADP results:
landlord : Farmers - -0.2892 : 0.2892

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.79
Average counter big cards per game: 5.36
Average successful coordination per game: 10.30
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.57
Coordination level: 8.15
2025-04-16 18:45:39 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:45:39 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:45:44 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_423542400.ckpt
2025-04-16 18:45:44 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_423542400.ckpt
2025-04-16 18:47:27 DEBUG: 完成 landlord_down_weights_423542400.ckpt，返回码：0
2025-04-16 18:47:27 DEBUG: stdout: WP results:
landlord : Farmers - 0.4368 : 0.5632
ADP results:
landlord : Farmers - -0.2802 : 0.2802

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.82
Average counter big cards per game: 5.32
Average successful coordination per game: 10.31
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.56
Coordination level: 8.15
2025-04-16 18:47:27 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:47:27 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:47:32 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_431398400.ckpt
2025-04-16 18:47:32 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_431398400.ckpt
2025-04-16 18:49:16 DEBUG: 完成 landlord_down_weights_431398400.ckpt，返回码：0
2025-04-16 18:49:16 DEBUG: stdout: WP results:
landlord : Farmers - 0.4332 : 0.5668
ADP results:
landlord : Farmers - -0.2928 : 0.2928

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.77
Average counter big cards per game: 5.37
Average successful coordination per game: 10.31
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.15
2025-04-16 18:49:16 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:49:16 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:49:21 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_439248000.ckpt
2025-04-16 18:49:21 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_439248000.ckpt
2025-04-16 18:51:04 DEBUG: 完成 landlord_down_weights_439248000.ckpt，返回码：0
2025-04-16 18:51:04 DEBUG: stdout: WP results:
landlord : Farmers - 0.436 : 0.564
ADP results:
landlord : Farmers - -0.2718 : 0.2718

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.86
Average counter big cards per game: 5.36
Average successful coordination per game: 10.34
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.56
Coordination level: 8.19
2025-04-16 18:51:04 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:51:04 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:51:09 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_447100800.ckpt
2025-04-16 18:51:09 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_447100800.ckpt
2025-04-16 18:52:52 DEBUG: 完成 landlord_down_weights_447100800.ckpt，返回码：0
2025-04-16 18:52:52 DEBUG: stdout: WP results:
landlord : Farmers - 0.4441 : 0.5559
ADP results:
landlord : Farmers - -0.2238 : 0.2238

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.92
Average counter big cards per game: 5.36
Average successful coordination per game: 10.39
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.56
Coordination level: 8.22
2025-04-16 18:52:52 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:52:52 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:52:57 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_454956800.ckpt
2025-04-16 18:52:57 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_454956800.ckpt
2025-04-16 18:54:41 DEBUG: 完成 landlord_down_weights_454956800.ckpt，返回码：0
2025-04-16 18:54:41 DEBUG: stdout: WP results:
landlord : Farmers - 0.43 : 0.57
ADP results:
landlord : Farmers - -0.3026 : 0.3026

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.83
Average counter big cards per game: 5.41
Average successful coordination per game: 10.37
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.20
2025-04-16 18:54:41 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:54:41 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:54:46 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_462806400.ckpt
2025-04-16 18:54:46 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_462806400.ckpt
2025-04-16 18:56:30 DEBUG: 完成 landlord_down_weights_462806400.ckpt，返回码：0
2025-04-16 18:56:30 DEBUG: stdout: WP results:
landlord : Farmers - 0.4362 : 0.5638
ADP results:
landlord : Farmers - -0.2748 : 0.2748

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.86
Average counter big cards per game: 5.43
Average successful coordination per game: 10.41
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.56
Coordination level: 8.23
2025-04-16 18:56:30 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:56:30 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:56:35 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_470662400.ckpt
2025-04-16 18:56:35 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_470662400.ckpt
2025-04-16 18:58:18 DEBUG: 完成 landlord_down_weights_470662400.ckpt，返回码：0
2025-04-16 18:58:18 DEBUG: stdout: WP results:
landlord : Farmers - 0.4302 : 0.5698
ADP results:
landlord : Farmers - -0.3074 : 0.3074

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.78
Average counter big cards per game: 5.38
Average successful coordination per game: 10.33
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.16
2025-04-16 18:58:18 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 18:58:18 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 18:58:23 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_478512000.ckpt
2025-04-16 18:58:23 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_478512000.ckpt
2025-04-16 19:00:07 DEBUG: 完成 landlord_down_weights_478512000.ckpt，返回码：0
2025-04-16 19:00:07 DEBUG: stdout: WP results:
landlord : Farmers - 0.4272 : 0.5728
ADP results:
landlord : Farmers - -0.3218 : 0.3218

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.74
Average counter big cards per game: 5.39
Average successful coordination per game: 10.31
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.15
2025-04-16 19:00:07 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:00:07 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:00:12 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_486368000.ckpt
2025-04-16 19:00:12 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_486368000.ckpt
2025-04-16 19:01:55 DEBUG: 完成 landlord_down_weights_486368000.ckpt，返回码：0
2025-04-16 19:01:55 DEBUG: stdout: WP results:
landlord : Farmers - 0.4369 : 0.5631
ADP results:
landlord : Farmers - -0.2702 : 0.2702

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.81
Average counter big cards per game: 5.31
Average successful coordination per game: 10.27
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.56
Coordination level: 8.13
2025-04-16 19:01:55 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:01:55 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:02:00 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_494224000.ckpt
2025-04-16 19:02:00 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_494224000.ckpt
2025-04-16 19:03:47 DEBUG: 完成 landlord_down_weights_494224000.ckpt，返回码：0
2025-04-16 19:03:47 DEBUG: stdout: WP results:
landlord : Farmers - 0.4357 : 0.5643
ADP results:
landlord : Farmers - -0.2768 : 0.2768

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.84
Average counter big cards per game: 5.38
Average successful coordination per game: 10.34
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.56
Coordination level: 8.19
2025-04-16 19:03:47 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:03:47 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:03:52 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_502076800.ckpt
2025-04-16 19:03:52 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_502076800.ckpt
2025-04-16 19:05:34 DEBUG: 完成 landlord_down_weights_502076800.ckpt，返回码：0
2025-04-16 19:05:34 DEBUG: stdout: WP results:
landlord : Farmers - 0.4301 : 0.5699
ADP results:
landlord : Farmers - -0.313 : 0.313

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.72
Average counter big cards per game: 5.38
Average successful coordination per game: 10.31
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.13
2025-04-16 19:05:34 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:05:34 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:05:39 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_509920000.ckpt
2025-04-16 19:05:39 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_509920000.ckpt
2025-04-16 19:07:21 DEBUG: 完成 landlord_down_weights_509920000.ckpt，返回码：0
2025-04-16 19:07:21 DEBUG: stdout: WP results:
landlord : Farmers - 0.4305 : 0.5695
ADP results:
landlord : Farmers - -0.3224 : 0.3224

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.80
Average counter big cards per game: 5.37
Average successful coordination per game: 10.32
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.16
2025-04-16 19:07:21 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:07:21 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:07:26 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_517779200.ckpt
2025-04-16 19:07:26 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_517779200.ckpt
2025-04-16 19:09:08 DEBUG: 完成 landlord_down_weights_517779200.ckpt，返回码：0
2025-04-16 19:09:08 DEBUG: stdout: WP results:
landlord : Farmers - 0.4297 : 0.5703
ADP results:
landlord : Farmers - -0.3092 : 0.3092

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.73
Average counter big cards per game: 5.32
Average successful coordination per game: 10.23
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.09
2025-04-16 19:09:08 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:09:08 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:09:13 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_525628800.ckpt
2025-04-16 19:09:13 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_525628800.ckpt
2025-04-16 19:10:56 DEBUG: 完成 landlord_down_weights_525628800.ckpt，返回码：0
2025-04-16 19:10:56 DEBUG: stdout: WP results:
landlord : Farmers - 0.429 : 0.571
ADP results:
landlord : Farmers - -0.3094 : 0.3094

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.77
Average counter big cards per game: 5.35
Average successful coordination per game: 10.27
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.57
Coordination level: 8.13
2025-04-16 19:10:56 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:10:56 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:11:01 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_533481600.ckpt
2025-04-16 19:11:01 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_533481600.ckpt
2025-04-16 19:12:45 DEBUG: 完成 landlord_down_weights_533481600.ckpt，返回码：0
2025-04-16 19:12:45 DEBUG: stdout: WP results:
landlord : Farmers - 0.4403 : 0.5597
ADP results:
landlord : Farmers - -0.2648 : 0.2648

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.95
Average counter big cards per game: 5.40
Average successful coordination per game: 10.39
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.56
Coordination level: 8.25
2025-04-16 19:12:45 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:12:45 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:12:50 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_541334400.ckpt
2025-04-16 19:12:50 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_541334400.ckpt
2025-04-16 19:14:34 DEBUG: 完成 landlord_down_weights_541334400.ckpt，返回码：0
2025-04-16 19:14:34 DEBUG: stdout: WP results:
landlord : Farmers - 0.4299 : 0.5701
ADP results:
landlord : Farmers - -0.3156 : 0.3156

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.79
Average counter big cards per game: 5.39
Average successful coordination per game: 10.36
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.18
2025-04-16 19:14:34 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:14:34 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:14:39 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_549193600.ckpt
2025-04-16 19:14:39 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_549193600.ckpt
2025-04-16 19:16:22 DEBUG: 完成 landlord_down_weights_549193600.ckpt，返回码：0
2025-04-16 19:16:22 DEBUG: stdout: WP results:
landlord : Farmers - 0.4235 : 0.5765
ADP results:
landlord : Farmers - -0.347 : 0.347

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.74
Average counter big cards per game: 5.35
Average successful coordination per game: 10.24
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.58
Coordination level: 8.11
2025-04-16 19:16:22 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:16:22 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:16:27 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_557046400.ckpt
2025-04-16 19:16:27 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_557046400.ckpt
2025-04-16 19:18:11 DEBUG: 完成 landlord_down_weights_557046400.ckpt，返回码：0
2025-04-16 19:18:11 DEBUG: stdout: WP results:
landlord : Farmers - 0.4267 : 0.5733
ADP results:
landlord : Farmers - -0.3208 : 0.3208

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.81
Average counter big cards per game: 5.40
Average successful coordination per game: 10.37
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.19
2025-04-16 19:18:11 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:18:11 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:18:16 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_564899200.ckpt
2025-04-16 19:18:16 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_564899200.ckpt
2025-04-16 19:19:59 DEBUG: 完成 landlord_down_weights_564899200.ckpt，返回码：0
2025-04-16 19:19:59 DEBUG: stdout: WP results:
landlord : Farmers - 0.4343 : 0.5657
ADP results:
landlord : Farmers - -0.303 : 0.303

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.79
Average counter big cards per game: 5.37
Average successful coordination per game: 10.28
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.15
2025-04-16 19:19:59 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:19:59 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:20:04 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_572748800.ckpt
2025-04-16 19:20:04 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_572748800.ckpt
2025-04-16 19:21:47 DEBUG: 完成 landlord_down_weights_572748800.ckpt，返回码：0
2025-04-16 19:21:47 DEBUG: stdout: WP results:
landlord : Farmers - 0.43 : 0.57
ADP results:
landlord : Farmers - -0.318 : 0.318

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.77
Average counter big cards per game: 5.39
Average successful coordination per game: 10.36
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.17
2025-04-16 19:21:47 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:21:47 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:21:52 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_580604800.ckpt
2025-04-16 19:21:52 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_580604800.ckpt
2025-04-16 19:23:35 DEBUG: 完成 landlord_down_weights_580604800.ckpt，返回码：0
2025-04-16 19:23:35 DEBUG: stdout: WP results:
landlord : Farmers - 0.426 : 0.574
ADP results:
landlord : Farmers - -0.339 : 0.339

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.77
Average counter big cards per game: 5.36
Average successful coordination per game: 10.28
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.14
2025-04-16 19:23:35 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:23:35 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:23:40 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_588460800.ckpt
2025-04-16 19:23:40 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_588460800.ckpt
2025-04-16 19:25:24 DEBUG: 完成 landlord_down_weights_588460800.ckpt，返回码：0
2025-04-16 19:25:24 DEBUG: stdout: WP results:
landlord : Farmers - 0.4256 : 0.5744
ADP results:
landlord : Farmers - -0.3252 : 0.3252

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.79
Average counter big cards per game: 5.39
Average successful coordination per game: 10.35
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.18
2025-04-16 19:25:24 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:25:24 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:25:29 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_596313600.ckpt
2025-04-16 19:25:29 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_596313600.ckpt
2025-04-16 19:27:14 DEBUG: 完成 landlord_down_weights_596313600.ckpt，返回码：0
2025-04-16 19:27:14 DEBUG: stdout: WP results:
landlord : Farmers - 0.4265 : 0.5735
ADP results:
landlord : Farmers - -0.3404 : 0.3404

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.79
Average counter big cards per game: 5.41
Average successful coordination per game: 10.37
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.19
2025-04-16 19:27:14 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:27:14 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:27:19 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_604169600.ckpt
2025-04-16 19:27:19 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_604169600.ckpt
2025-04-16 19:29:02 DEBUG: 完成 landlord_down_weights_604169600.ckpt，返回码：0
2025-04-16 19:29:02 DEBUG: stdout: WP results:
landlord : Farmers - 0.4215 : 0.5785
ADP results:
landlord : Farmers - -0.366 : 0.366

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.73
Average counter big cards per game: 5.37
Average successful coordination per game: 10.27
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.58
Coordination level: 8.13
2025-04-16 19:29:02 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:29:02 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:29:07 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_612022400.ckpt
2025-04-16 19:29:07 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_612022400.ckpt
2025-04-16 19:30:51 DEBUG: 完成 landlord_down_weights_612022400.ckpt，返回码：0
2025-04-16 19:30:51 DEBUG: stdout: WP results:
landlord : Farmers - 0.4241 : 0.5759
ADP results:
landlord : Farmers - -0.354 : 0.354

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.74
Average counter big cards per game: 5.39
Average successful coordination per game: 10.33
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.58
Coordination level: 8.15
2025-04-16 19:30:51 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:30:51 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:30:56 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_619881600.ckpt
2025-04-16 19:30:56 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_619881600.ckpt
2025-04-16 19:32:40 DEBUG: 完成 landlord_down_weights_619881600.ckpt，返回码：0
2025-04-16 19:32:40 DEBUG: stdout: WP results:
landlord : Farmers - 0.4273 : 0.5727
ADP results:
landlord : Farmers - -0.3406 : 0.3406

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.88
Average counter big cards per game: 5.39
Average successful coordination per game: 10.48
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.25
2025-04-16 19:32:40 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:32:40 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:32:45 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_627734400.ckpt
2025-04-16 19:32:45 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_627734400.ckpt
2025-04-16 19:34:29 DEBUG: 完成 landlord_down_weights_627734400.ckpt，返回码：0
2025-04-16 19:34:29 DEBUG: stdout: WP results:
landlord : Farmers - 0.4263 : 0.5737
ADP results:
landlord : Farmers - -0.36 : 0.36

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.72
Average counter big cards per game: 5.39
Average successful coordination per game: 10.37
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.16
2025-04-16 19:34:29 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:34:29 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:34:34 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_635587200.ckpt
2025-04-16 19:34:34 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_635587200.ckpt
2025-04-16 19:36:18 DEBUG: 完成 landlord_down_weights_635587200.ckpt，返回码：0
2025-04-16 19:36:18 DEBUG: stdout: WP results:
landlord : Farmers - 0.4278 : 0.5722
ADP results:
landlord : Farmers - -0.3266 : 0.3266

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.76
Average counter big cards per game: 5.36
Average successful coordination per game: 10.38
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.17
2025-04-16 19:36:18 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:36:18 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:36:23 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_643446400.ckpt
2025-04-16 19:36:23 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_643446400.ckpt
2025-04-16 19:38:06 DEBUG: 完成 landlord_down_weights_643446400.ckpt，返回码：0
2025-04-16 19:38:06 DEBUG: stdout: WP results:
landlord : Farmers - 0.4241 : 0.5759
ADP results:
landlord : Farmers - -0.3408 : 0.3408

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.73
Average counter big cards per game: 5.33
Average successful coordination per game: 10.32
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.58
Coordination level: 8.13
2025-04-16 19:38:06 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:38:06 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:38:11 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_651292800.ckpt
2025-04-16 19:38:11 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_651292800.ckpt
2025-04-16 19:39:55 DEBUG: 完成 landlord_down_weights_651292800.ckpt，返回码：0
2025-04-16 19:39:55 DEBUG: stdout: WP results:
landlord : Farmers - 0.4219 : 0.5781
ADP results:
landlord : Farmers - -0.3666 : 0.3666

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.69
Average counter big cards per game: 5.37
Average successful coordination per game: 10.27
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.58
Coordination level: 8.11
2025-04-16 19:39:55 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:39:55 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:40:00 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_659148800.ckpt
2025-04-16 19:40:00 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_659148800.ckpt
2025-04-16 19:41:43 DEBUG: 完成 landlord_down_weights_659148800.ckpt，返回码：0
2025-04-16 19:41:43 DEBUG: stdout: WP results:
landlord : Farmers - 0.4221 : 0.5779
ADP results:
landlord : Farmers - -0.3862 : 0.3862

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.74
Average counter big cards per game: 5.37
Average successful coordination per game: 10.37
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.58
Coordination level: 8.16
2025-04-16 19:41:43 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:41:43 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:41:48 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_667001600.ckpt
2025-04-16 19:41:48 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_667001600.ckpt
2025-04-16 19:43:31 DEBUG: 完成 landlord_down_weights_667001600.ckpt，返回码：0
2025-04-16 19:43:31 DEBUG: stdout: WP results:
landlord : Farmers - 0.4209 : 0.5791
ADP results:
landlord : Farmers - -0.3908 : 0.3908

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.77
Average counter big cards per game: 5.40
Average successful coordination per game: 10.36
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.58
Coordination level: 8.18
2025-04-16 19:43:31 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:43:31 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:43:36 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_674860800.ckpt
2025-04-16 19:43:36 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_674860800.ckpt
2025-04-16 19:45:18 DEBUG: 完成 landlord_down_weights_674860800.ckpt，返回码：0
2025-04-16 19:45:18 DEBUG: stdout: WP results:
landlord : Farmers - 0.4314 : 0.5686
ADP results:
landlord : Farmers - -0.329 : 0.329

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.84
Average counter big cards per game: 5.37
Average successful coordination per game: 10.34
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.18
2025-04-16 19:45:18 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:45:18 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:45:23 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_682713600.ckpt
2025-04-16 19:45:23 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_682713600.ckpt
2025-04-16 19:47:06 DEBUG: 完成 landlord_down_weights_682713600.ckpt，返回码：0
2025-04-16 19:47:06 DEBUG: stdout: WP results:
landlord : Farmers - 0.4297 : 0.5703
ADP results:
landlord : Farmers - -0.3332 : 0.3332

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.83
Average counter big cards per game: 5.34
Average successful coordination per game: 10.37
Average bomb/rocket plays per game: 0.02

Farmer win probability: 0.57
Coordination level: 8.18
2025-04-16 19:47:06 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 19:47:06 DEBUG: 当前测试结果已保存到 evaluate_results.csv
2025-04-16 19:47:11 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_690569600.ckpt
2025-04-16 19:47:11 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_690569600.ckpt
