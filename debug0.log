2025-04-16 16:54:48 DEBUG: 日志初始化成功
2025-04-16 16:54:48 DEBUG: 找到 277 个 ckpt 文件
2025-04-16 16:54:48 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 16:54:48 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 16:55:17 DEBUG: 日志初始化成功
2025-04-16 16:55:17 DEBUG: 找到 277 个 ckpt 文件
2025-04-16 16:55:17 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 16:55:17 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_0.ckpt
2025-04-16 16:57:09 DEBUG: 完成 landlord_down_weights_0.ckpt，返回码：0
2025-04-16 16:57:09 DEBUG: stdout: WP results:
landlord : Farmers - 0.6324 : 0.3676
ADP results:
landlord : Farmers - 0.8298 : -0.8298

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.41
Average counter big cards per game: 5.93
Average successful coordination per game: 11.42
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.37
Coordination level: 8.92
2025-04-16 16:57:09 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:57:14 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_7846400.ckpt
2025-04-16 16:57:14 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_7846400.ckpt
2025-04-16 16:59:02 DEBUG: 完成 landlord_down_weights_7846400.ckpt，返回码：0
2025-04-16 16:59:02 DEBUG: stdout: WP results:
landlord : Farmers - 0.5552 : 0.4448
ADP results:
landlord : Farmers - 0.4776 : -0.4776

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.49
Average counter big cards per game: 5.50
Average successful coordination per game: 11.07
Average bomb/rocket plays per game: 0.05

Farmer win probability: 0.44
Coordination level: 8.68
2025-04-16 16:59:02 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 16:59:07 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_15686400.ckpt
2025-04-16 16:59:07 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_15686400.ckpt
2025-04-16 17:00:56 DEBUG: 完成 landlord_down_weights_15686400.ckpt，返回码：0
2025-04-16 17:00:56 DEBUG: stdout: WP results:
landlord : Farmers - 0.5495 : 0.4505
ADP results:
landlord : Farmers - 0.4422 : -0.4422

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.43
Average counter big cards per game: 5.48
Average successful coordination per game: 11.16
Average bomb/rocket plays per game: 0.05

Farmer win probability: 0.45
Coordination level: 8.69
2025-04-16 17:00:56 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-16 17:01:01 DEBUG: 开始测试：./douzero_checkpoints/douzero/landlord_down_weights_23539200.ckpt
2025-04-16 17:01:01 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero/landlord_down_weights_23539200.ckpt
