2025-04-17 13:21:16 DEBUG: 日志初始化成功
2025-04-17 13:21:16 DEBUG: 找到 5 个 ckpt 文件
2025-04-17 13:21:16 DEBUG: 开始测试：./douzero_checkpoints/douzero_0/landlord_down_weights_8358400.ckpt
2025-04-17 13:21:16 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_0/landlord_down_weights_8358400.ckpt
2025-04-17 13:23:04 DEBUG: 完成 landlord_down_weights_8358400.ckpt，返回码：0
2025-04-17 13:23:04 DEBUG: stdout: WP results:
landlord : Farmers - 0.5526 : 0.4474
ADP results:
landlord : Farmers - 0.4552 : -0.4552

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.46
Average counter big cards per game: 5.45
Average successful coordination per game: 11.09
Average bomb/rocket plays per game: 0.05

Farmer win probability: 0.45
Coordination level: 8.66
2025-04-17 13:23:04 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 13:23:04 DEBUG: 已写入 evaluate_results_0.csv
2025-04-17 13:23:09 DEBUG: 开始测试：./douzero_checkpoints/douzero_0/landlord_down_weights_16716800.ckpt
2025-04-17 13:23:09 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_0/landlord_down_weights_16716800.ckpt
2025-04-17 13:24:58 DEBUG: 完成 landlord_down_weights_16716800.ckpt，返回码：0
2025-04-17 13:24:58 DEBUG: stdout: WP results:
landlord : Farmers - 0.5468 : 0.4532
ADP results:
landlord : Farmers - 0.419 : -0.419

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.32
Average counter big cards per game: 5.44
Average successful coordination per game: 11.08
Average bomb/rocket plays per game: 0.05

Farmer win probability: 0.45
Coordination level: 8.61
2025-04-17 13:24:58 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 13:24:58 DEBUG: 已写入 evaluate_results_0.csv
2025-04-17 13:25:03 DEBUG: 开始测试：./douzero_checkpoints/douzero_0/landlord_down_weights_25065600.ckpt
2025-04-17 13:25:03 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_0/landlord_down_weights_25065600.ckpt
2025-04-17 13:26:52 DEBUG: 完成 landlord_down_weights_25065600.ckpt，返回码：0
2025-04-17 13:26:52 DEBUG: stdout: WP results:
landlord : Farmers - 0.5409 : 0.4591
ADP results:
landlord : Farmers - 0.3842 : -0.3842

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.27
Average counter big cards per game: 5.47
Average successful coordination per game: 11.08
Average bomb/rocket plays per game: 0.05

Farmer win probability: 0.46
Coordination level: 8.61
2025-04-17 13:26:52 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 13:26:52 DEBUG: 已写入 evaluate_results_0.csv
2025-04-17 13:26:57 DEBUG: 开始测试：./douzero_checkpoints/douzero_0/landlord_down_weights_33414400.ckpt
2025-04-17 13:26:57 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_0/landlord_down_weights_33414400.ckpt
2025-04-17 13:28:47 DEBUG: 完成 landlord_down_weights_33414400.ckpt，返回码：0
2025-04-17 13:28:47 DEBUG: stdout: WP results:
landlord : Farmers - 0.5402 : 0.4598
ADP results:
landlord : Farmers - 0.3646 : -0.3646

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.26
Average counter big cards per game: 5.48
Average successful coordination per game: 11.03
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.46
Coordination level: 8.59
2025-04-17 13:28:47 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 13:28:47 DEBUG: 已写入 evaluate_results_0.csv
2025-04-17 22:02:23 DEBUG: 日志初始化成功
2025-04-17 22:02:23 DEBUG: 找到 16 个 ckpt 文件
2025-04-17 22:02:23 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_8352000.ckpt
2025-04-17 22:02:23 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_8352000.ckpt
2025-04-17 22:04:07 DEBUG: 完成 landlord_down_weights_8352000.ckpt，返回码：0
2025-04-17 22:04:07 DEBUG: stdout: WP results:
landlord : Farmers - 0.5525 : 0.4475
ADP results:
landlord : Farmers - 0.4074 : -0.4074

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.46
Average counter big cards per game: 5.46
Average successful coordination per game: 11.14
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.45
Coordination level: 8.69
2025-04-17 22:04:07 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:04:07 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:04:12 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_16691200.ckpt
2025-04-17 22:04:12 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_16691200.ckpt
2025-04-17 22:05:54 DEBUG: 完成 landlord_down_weights_16691200.ckpt，返回码：0
2025-04-17 22:05:54 DEBUG: stdout: WP results:
landlord : Farmers - 0.5439 : 0.4561
ADP results:
landlord : Farmers - 0.3522 : -0.3522

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.33
Average counter big cards per game: 5.45
Average successful coordination per game: 11.08
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.46
Coordination level: 8.62
2025-04-17 22:05:54 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:05:54 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:05:59 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_25033600.ckpt
2025-04-17 22:05:59 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_25033600.ckpt
2025-04-17 22:07:46 DEBUG: 完成 landlord_down_weights_25033600.ckpt，返回码：0
2025-04-17 22:07:46 DEBUG: stdout: WP results:
landlord : Farmers - 0.5407 : 0.4593
ADP results:
landlord : Farmers - 0.3068 : -0.3068

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.30
Average counter big cards per game: 5.47
Average successful coordination per game: 11.06
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.46
Coordination level: 8.61
2025-04-17 22:07:46 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:07:46 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:07:51 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_33372800.ckpt
2025-04-17 22:07:51 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_33372800.ckpt
2025-04-17 22:09:37 DEBUG: 完成 landlord_down_weights_33372800.ckpt，返回码：0
2025-04-17 22:09:37 DEBUG: stdout: WP results:
landlord : Farmers - 0.536 : 0.464
ADP results:
landlord : Farmers - 0.3198 : -0.3198

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.11
Average counter big cards per game: 5.45
Average successful coordination per game: 11.02
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.46
Coordination level: 8.52
2025-04-17 22:09:37 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:09:37 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:09:42 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_41712000.ckpt
2025-04-17 22:09:42 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_41712000.ckpt
2025-04-17 22:11:28 DEBUG: 完成 landlord_down_weights_41712000.ckpt，返回码：0
2025-04-17 22:11:28 DEBUG: stdout: WP results:
landlord : Farmers - 0.5371 : 0.4629
ADP results:
landlord : Farmers - 0.3444 : -0.3444

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.14
Average counter big cards per game: 5.46
Average successful coordination per game: 11.04
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.46
Coordination level: 8.55
2025-04-17 22:11:28 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:11:28 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:11:33 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_50048000.ckpt
2025-04-17 22:11:33 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_50048000.ckpt
2025-04-17 22:13:19 DEBUG: 完成 landlord_down_weights_50048000.ckpt，返回码：0
2025-04-17 22:13:19 DEBUG: stdout: WP results:
landlord : Farmers - 0.532 : 0.468
ADP results:
landlord : Farmers - 0.3002 : -0.3002

Farmer Cooperation Statistics:
Average consecutive plays per game: 9.10
Average counter big cards per game: 5.50
Average successful coordination per game: 11.06
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.47
Coordination level: 8.55
2025-04-17 22:13:19 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:13:19 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:13:24 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_58393600.ckpt
2025-04-17 22:13:24 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_58393600.ckpt
2025-04-17 22:15:10 DEBUG: 完成 landlord_down_weights_58393600.ckpt，返回码：0
2025-04-17 22:15:10 DEBUG: stdout: WP results:
landlord : Farmers - 0.521 : 0.479
ADP results:
landlord : Farmers - 0.2226 : -0.2226

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.92
Average counter big cards per game: 5.42
Average successful coordination per game: 10.83
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.48
Coordination level: 8.39
2025-04-17 22:15:10 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:15:10 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:15:15 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_66736000.ckpt
2025-04-17 22:15:15 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_66736000.ckpt
2025-04-17 22:17:01 DEBUG: 完成 landlord_down_weights_66736000.ckpt，返回码：0
2025-04-17 22:17:01 DEBUG: stdout: WP results:
landlord : Farmers - 0.5228 : 0.4772
ADP results:
landlord : Farmers - 0.2584 : -0.2584

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.93
Average counter big cards per game: 5.47
Average successful coordination per game: 10.90
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.48
Coordination level: 8.43
2025-04-17 22:17:01 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:17:01 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:17:06 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_75075200.ckpt
2025-04-17 22:17:06 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_75075200.ckpt
2025-04-17 22:18:54 DEBUG: 完成 landlord_down_weights_75075200.ckpt，返回码：0
2025-04-17 22:18:54 DEBUG: stdout: WP results:
landlord : Farmers - 0.5272 : 0.4728
ADP results:
landlord : Farmers - 0.2688 : -0.2688

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.87
Average counter big cards per game: 5.49
Average successful coordination per game: 11.01
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.47
Coordination level: 8.46
2025-04-17 22:18:54 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:18:54 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:18:59 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_83424000.ckpt
2025-04-17 22:18:59 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_83424000.ckpt
2025-04-17 22:20:47 DEBUG: 完成 landlord_down_weights_83424000.ckpt，返回码：0
2025-04-17 22:20:47 DEBUG: stdout: WP results:
landlord : Farmers - 0.5186 : 0.4814
ADP results:
landlord : Farmers - 0.2086 : -0.2086

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.82
Average counter big cards per game: 5.47
Average successful coordination per game: 10.90
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.48
Coordination level: 8.40
2025-04-17 22:20:47 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:20:47 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:20:52 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_91772800.ckpt
2025-04-17 22:20:52 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_91772800.ckpt
2025-04-17 22:22:38 DEBUG: 完成 landlord_down_weights_91772800.ckpt，返回码：0
2025-04-17 22:22:38 DEBUG: stdout: WP results:
landlord : Farmers - 0.5208 : 0.4792
ADP results:
landlord : Farmers - 0.2328 : -0.2328

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.90
Average counter big cards per game: 5.51
Average successful coordination per game: 10.96
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.48
Coordination level: 8.46
2025-04-17 22:22:38 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:22:38 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:22:43 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_100115200.ckpt
2025-04-17 22:22:43 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_100115200.ckpt
2025-04-17 22:24:31 DEBUG: 完成 landlord_down_weights_100115200.ckpt，返回码：0
2025-04-17 22:24:31 DEBUG: stdout: WP results:
landlord : Farmers - 0.5101 : 0.4899
ADP results:
landlord : Farmers - 0.1716 : -0.1716

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.82
Average counter big cards per game: 5.50
Average successful coordination per game: 10.81
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.49
Coordination level: 8.38
2025-04-17 22:24:31 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:24:31 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:24:36 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_108460800.ckpt
2025-04-17 22:24:36 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_108460800.ckpt
2025-04-17 22:26:21 DEBUG: 完成 landlord_down_weights_108460800.ckpt，返回码：0
2025-04-17 22:26:21 DEBUG: stdout: WP results:
landlord : Farmers - 0.5079 : 0.4921
ADP results:
landlord : Farmers - 0.1914 : -0.1914

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.84
Average counter big cards per game: 5.47
Average successful coordination per game: 10.78
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.49
Coordination level: 8.37
2025-04-17 22:26:21 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:26:21 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:26:26 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_116812800.ckpt
2025-04-17 22:26:26 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_116812800.ckpt
2025-04-17 22:28:14 DEBUG: 完成 landlord_down_weights_116812800.ckpt，返回码：0
2025-04-17 22:28:14 DEBUG: stdout: WP results:
landlord : Farmers - 0.5017 : 0.4983
ADP results:
landlord : Farmers - 0.0974 : -0.0974

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.88
Average counter big cards per game: 5.53
Average successful coordination per game: 10.79
Average bomb/rocket plays per game: 0.03

Farmer win probability: 0.50
Coordination level: 8.40
2025-04-17 22:28:14 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:28:14 DEBUG: 已写入 evaluate_results_2.csv
2025-04-17 22:28:19 DEBUG: 开始测试：./douzero_checkpoints/douzero_2/landlord_down_weights_125155200.ckpt
2025-04-17 22:28:19 DEBUG: 运行命令：python3 evaluate.py --landlord baselines/sl/landlord.ckpt --landlord_up baselines/sl/landlord_up.ckpt --landlord_down ./douzero_checkpoints/douzero_2/landlord_down_weights_125155200.ckpt
2025-04-17 22:30:05 DEBUG: 完成 landlord_down_weights_125155200.ckpt，返回码：0
2025-04-17 22:30:05 DEBUG: stdout: WP results:
landlord : Farmers - 0.4968 : 0.5032
ADP results:
landlord : Farmers - 0.1 : -0.1

Farmer Cooperation Statistics:
Average consecutive plays per game: 8.90
Average counter big cards per game: 5.46
Average successful coordination per game: 10.69
Average bomb/rocket plays per game: 0.04

Farmer win probability: 0.50
Coordination level: 8.35
2025-04-17 22:30:05 ERROR: stderr: /home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
/home/share/yunwang/arl/DouZero/douzero/evaluation/deep_agent.py:11: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  pretrained = torch.load(model_path, map_location='cuda:0')
2025-04-17 22:30:05 DEBUG: 已写入 evaluate_results_2.csv
